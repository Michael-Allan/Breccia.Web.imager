/* Style sheet for Breccian Web images
 */
@namespace brec 'data:,Breccia/XML';
@namespace html 'http://www.w3.org/1999/xhtml';
@namespace img 'data:,Breccia/Web/imager';


    :root { /*
        --centre-column:   The value of the namesake imager option [BWI] is effectively written here. */
        --hyperlink-colour-H: 190/*∼cyan*/;
        --viewport-width: calc( 100vw - /*maximum expected width of vertical scroll bar*/9mm ); /*
             An estimate of the true viewport width, such that content this wide will not of itself
             cause the horizontal scroll bar to appear.  This is a work around for a fault in CSS.
             https://www.w3.org/TR/css-values/#issue-56221f3d */
        background-color: hsl( 0, 0%, 15% );
                   color: hsl( 0, 0%, 79% ); }



/* ━━━  B r e c c i a n   l a y o u t  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
 */

    /* Fracta
     */
    brec|FileFractum,                     /*  The file fractum,    */
    brec|FileFractum > brec|*:not(Head), /*  its fractal children,  */
    brec|Head ~ brec|* {                /*  and other fracta’s fractal children. */
        display: block; }



    /* Fractal heads
     */
    brec|Head {
        display: block;
        white-space: pre; } /* [T] */


    brec|/*division*/Head/*aka divider*/ > DividerSegment {
        display: block; }



    /* Block constructs and their component lines
     */
    brec|CommentBlock, brec|CommentBlock > Line,
    brec|IndentBlind,  brec|IndentBlind  > Line {
        display: block; } /* This might lead to difficulties.  Often an ancestor (e.g. descriptor)
          will have inline display, and the ramifications of a block-in-inline arrangement confuse even
          the CSS people.  https://github.com/w3c/csswg-drafts/issues/1477
             Yet these *are* block constructs and saying so, while it makes no difference to text flow,
          enables a reduction (elsewhere) of their `line-height`. */



/* ━━━  B o d y   f r a c t a  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
 */

    /* A self hyperlink within a perfect indent (the typical case).  Here the hyperlink element `a`
     * wraps the whole of the indent (which comprises spaces) except the final character.
     */
    brec|PerfectIndent > html|a[class~='self'] {
        color: hsl( var(--hyperlink-colour-H), 30%, 50% );
        position: relative; /* [ECB] */
        text-decoration: none; } /* Defeat any browser default such as the `underline` of Chrome.
          It would be useless for such an isolated hyperlink, and would defeat cued hinting (below). */

    /* A hint to the presence of the self-hyperlink, cued by sustained hovering of the cursor
     * in the perfect indent.
     */
    brec|PerfectIndent > html|a[class~='self']::before {
        content: /*URI fragment delimiter*/'#';
        left: 0.5ch;
        position: absolute;
        transition: visibility /*duration*/0.0s /*function*/linear /*delay*/1.5s; /*
          Transit of `content` (`none` to '#') is preferred, but fails (Chrome 105, Firefox 91).
          Transit of `visibility` instead is a workaround. */
        visibility: hidden; }

    brec|PerfectIndent:hover > html|a[class~='self']::before {
        visibility: visible; }



    /* Indicator of a targeted fractum, either a pointer (Ptr) or division (Div).
     */
    *[typestamp]/*Ptr*/:target > Head >                  PerfectIndent > html|a[class~='self']::before,
    *[typestamp]/*Div*/:target > Head > DividerSegment > PerfectIndent > html|a[class~='self']::before {
        color: hsl( 0/*red*/, 50%, 70% );
        transition-delay: 0s;
        visibility: visible; }



    /* A self hyperlink outside of a perfect indent.
     * Here the hyperlink element `a` wraps one or two non-space characters.
     */
    brec|*:not(PerfectIndent) > html|a[class~='self'] {
        color: inherit; /* Leaving the wrapped character, which is thereby the content
          of a hyperlink, visibly unaffected by that treatment. */
        text-decoration: none; } /* Defeat any browser default such as the `underline` of Chrome.
          It would likely be too distracting for such a specialized, infrequently used hyperlink.
          Let the cued hinting from the (typically) more numerous intra-indent hyperlinks (above),
          together with the cursor styling for the present hyperlink, suffice for hinting purposes. */



/* ━━━  C o m m e n t   c a r r i e r s  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
 */

    brec|CommentAppender,
    brec|CommentBlock {
        color: hsl( 0, 0%, 39% ); }



    brec|CommentBlock > Line > Label {
        color: hsl( 0, 0%, 50% ); }



/* ━━━  D i v i s i o n s  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
 */

    brec|Division > Head/*aka ‘divider’*/ {
        color: hsl( 0, 0%, 39% );
        line-height: 1.0; } /* For seamless vertical jointing of semigraphics. */



    brec|Division > Head/*aka ‘divider’*/ brec|DivisionLabel {
        color: hsl( 0, 0%, 50% ); }

    brec|Division > Head/*aka ‘divider’*/ brec|DivisionLabel[class~='titling'] { /* [CSF] */
        color: hsl( 0, 0%, 63% );
        font-weight: bold; }



/* ━━━  F o n t s  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
 */

    @font-face {
        font-family: 'Fairfax HD';
        src: local('Fairfax HD'),
            url('FairfaxHD.woff2')       format('woff2'),
           url('FairfaxHD.ttf'/*[GTF]*/)  format('opentype'); }



    :root {
        font-family:
          'Fairfax HD', /* Gives near-seamless jointing of semigraphics and good alignment of lines
             and triangles (ab)used as arrow heads.  So does JetBrains Mono, but its stubby ascenders
             and descenders harm readability.  Others worthy of mention are DejaVu Sans Mono and Mensch,
             variants  of Vera Sans Mono. */
          'monospace'; }


    @media screen {
        :root {
            font-size: max( 16px, 1em ); }} /* What is known to look reliably good across clients,
              but never smaller than the reader prefers. */



    /* Setting the line height for consistency across clients.
     * E.g. the default value is 1 for Chrome 98, yet 1.2 for Firefox 91.
     */
    :root {
        line-height: 1.1;
        cursor: text; } /* Stopping the style change that occurs when the cursor enters the line gap,
          itself the artifact of a line height greater than 1.  This keeps the style constant, as well,
          when the cursor enters the left or right margin of the (horizontally centred) file fractum. */

    brec|IndentBlind {
        line-height: 1.0; } /* For seamless vertical jointing of semigraphics. */



/* ━━━  F r a c t u m   i n d i c a n t s  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
 */

    brec|FractumIndicant html|a { /* Defeat any default styles indicative of the presence of
          a hyperlink element (`a`) in favour of cued styling for that purpose (e.g. on hover),
          which will better resolve these elements where they overlap each other in stacks. */
        color: inherit;
        text-decoration: none; }

    brec|FractumIndicant html|a {
        transition: color /*duration*/0.2s /*function*/ease-out /*delay*/0.1s; }

    brec|FractumIndicant html|a:hover {
        color: hsl( var(--hyperlink-colour-H), 30%, 60% ); }



/* ━━━  I n d e n t   b l i n d s  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
 */

    brec|IndentBlind > Line > Delimiter {
        background-color: hsl( 211/*blue*/, 20%, 25% ); }



/* ━━━  P a g e   l a y o u t  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
 */

    /* Centring the text in the page
     */
    brec|FileFractum {
        margin: /*top, bottom*/0  /*left, right*/auto/*centred*/;
        width: min( /*(a)*/var(--centre-column) * 2,  /*(b)*/var(--viewport-width) ); } /*
          Value (a) sizes the file fractum to be centred as per imager option `--centre-column`. [BWI]
          Value (b) defeats the effect in narrow viewports, where it might needlessly balloon the width
          and force the horizontal scroll bar to appear. */



/* ━━━  P a t t e r n   m a t c h e r s  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
 */

    brec|PatternDelimiter,
    brec|Pattern {
        color: hsl( 0, 0%, 39% ); }



    brec|BackslashedSpecial,
    brec|GroupDelimiter,
    brec|Literalizer,
    brec|Metacharacter,
    brec|PerfectIndentMarker {
        color: hsl( 0/*red*/, 33%, 38% ); }



    brec|MatchModifiers {
        color: hsl( 0/*red*/, 33%, 38% ); }



/* ━━━  P o i n t s  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
 */

    brec|Bullet {
        font-weight: bold; }

    brec|Bullet img|punctuation {
        font-weight: normal; }



    /* Aside points
     */
    brec|AsidePoint > Head {
        color: hsl( 0, 0%, 50% ); }



    /* Alarm points
     */
    brec|AlarmPoint > Head > Bullet {
        color: hsl( 0/*red*/, 100%, 63% ); }

    brec|AlarmPoint > Head > Bullet img|terminator {
        font-weight: normal; }



    /* Plain points
     */
    brec|PlainPoint > Head > Bullet {
        color: hsl( 0, 0%, 100% ); }



    /* Task points
     */
    brec|TaskPoint > Head > Bullet {
        color: hsl( 27/*orange*/, 70%, 60% ); }

    brec|TaskPoint > Head > Bullet img|terminator {
        color: hsl( 0, 0%, 39% ); }



/* ┈┈┈  c o m m a n d   p o i n t s   ┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
 */

    :root {
        --command-point-head-colour:   hsl( 0, 0%, 39% );
        --command-point-bullet-colour: hsl( 0, 0%, 56% );
        --command-operator-colour:     hsl( 0, 0%, 50% ); /* operator or other key descriptor element */
        --command-point-bullet-weight: normal; }



    brec|AppendageClause > Delimiter {
        color: var(--command-operator-colour); }

    brec|Appendage {
        color: hsl( 0, 0%, 45% ); }



    brec|ContainmentOperator {
        color: var(--command-operator-colour); }



    /* Associative references
     */
    brec|AssociativeReference > Head {
        color: var(--command-point-head-colour); }

    brec|AssociativeReference > Head > Bullet {
        color:       var(--command-point-bullet-colour);
        font-weight: var(--command-point-bullet-weight); }

    brec|AssociativeReference > Head > Descriptor > Command > ReferrerClause > Granum:first-child/*‘re’*/,
    brec|AssociativeReference > Head > Descriptor > Command > ReferentialCommand {
        color: var(--command-operator-colour); }



    /* Plain command points
     */
    brec|PlainCommandPoint > Head {
        color: var(--command-point-head-colour); }

    brec|PlainCommandPoint > Head > Bullet {
        color:       var(--command-point-bullet-colour);
        font-weight: var(--command-point-bullet-weight); }



    /* Privatizers
     */
    brec|Privatizer > Head {
        color: var(--command-point-head-colour); }

    brec|Privatizer > Head > Bullet {
        color:       var(--command-point-bullet-colour);
        font-weight: var(--command-point-bullet-weight); }

    brec|Privatizer > Head > Descriptor > Command {
        color: var(--command-operator-colour); }



/* NOTES
 * ─────
 *   BWI  http://reluk.ca/project/Breccia/Web/imager/bin/breccia-web-image.brec.xht
 *
 *   CB · Here establishing the containing block for absolutely positioned descendants.
 *        https://www.w3.org/TR/css-position/#def-cb
 *
 *   CSF  Class-selector fallback.  Class selectors fail on non-HTML elements under Chrome 98.0.
 *        Here the general attribute selector `[class~='CLASS']` is used as a fallback.
 *
 *   GTF  A font file marked for glyph testing.  See imager option `--glyph-test-font`.  [BWI]
 *        The quoted file name (in single or double quotes) is directly followed by zero or more spaces,
 *        then a CSS comment that begins with zero or more spaces and ‘[GTF]’.  The file name itself
 *        must contain no whitespace.
 *
 *   T ·· Text properties are applicable within fractal heads alone, where all Breccian text is confined.
 */


                                                     /* Copyright © 2022  Michael Allan.  Licence MIT. */
