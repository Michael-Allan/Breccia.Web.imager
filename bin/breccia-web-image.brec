`breccia-web-image` - Make a Web image

        breccia-web-image  [<options>]  <boundary path>
        breccia-web-image  --help | -?

    - The `breccia-web-image` command makes a Web image delimited by the given boundary path.
        - It ensures that each Breccian source file (`.brec`) stored at or under the boundary path
          is accompanied by its HTML image file, a sibling namesake with a `.brec.xht` extension.
        - Any image file that is missing is formed anew, any that is outdated is reformed.
            - An image file is outdated unless it postdates both its source file
              and all formal resources of the source file.
                : re `formal resources` see `formalResources` @ non-fractal ../ExternalResources.java :
                  Typically these are Breccian referent files.
        - The working directory must be the command directory.
            : see `^^working directory$` @ `^^shell commands$` @
              http://reluk.ca/project/Java/notepad.brec
    - One positional argument is required:

        <boundary path>
            / The path of a file or directory.
            - Sets the bounds of the Web image: each Breccian source file stored at or under this path
              is made eligible for imaging.

    - The positional argument may be preceded by one or more nominal arguments, aka options:

        --centre-column: --centre-column=<number>
            - The columnar offset on which to centre the text.
                : re `columnar offset` see http://reluk.ca/project/Breccia/parser/Markup.java :
                  Columnar offsets are zero based.
                - In wide viewports, this column of the source file will appear at centre.
            - The default is 52.5.
        --co-service-directory: --co-service-directory=<URI reference>
                : re `URI reference` see https://datatracker.ietf.org/doc/html/rfc3986#section-4.1
            - The location of the co-service directory.
                - It may be given with or without a trailing ‘/’.
            - The co-service directory contains the auxiliary files of the Web image.
                - Its location is written verbatim into the HTML files of the Web image
                  and must therefore be accessible to Web clients.
            - The co-service directory must contain the following auxiliary files at a minimum.

                    style sheet: `<CS>/Breccia/Web/imager/image.css`
                        / Here ‘<CS>’ stands for the given location of co-service directory.
                        - Typically this is a copy of the bundled sheet, or a custom sheet
                          that imports from a copy of the bundled sheet.
                            : re `bundled sheet` see image.css

                - Any resource files referred to by the style sheet must also be included.
                  For the bundled sheet, these are:

                    font file: `<CS>/Breccia/Web/imager/FairfaxHD.ttf`
                        : see https://www.kreativekorp.com/software/fonts/fairfaxhd.shtml

            - The default location for the co-service directory is `http://reluk.ca/_/Web_service/`.
                / Better not rely on it, however.  The files there may be incompatible
                  with your installation, or become so at any time, or be slow to serve.
                  Rather you should supply a directory under your own control.
        --force
            - Forcefully remakes the Web image.  Any preexisting image files are reformed
              regardless of whether they were out of date.
        --glyph-test-font: --glyph-test-font=<file path> | none
            - The font file for glyph tests.
            - If the value is `none`, then no glyph tests are performed.
            - Otherwise the file must contain an OpenType font
                - A test is performed on each character of the image source and a warning emitted
                  for any whose glyph is missing from the font.
            - The default value is either read from the style sheet, or it is `none`.
                : re `style sheet` see @ `^^--co-service-directory`
                - Use `--verbose` to report the actual default value in use.
                    : re `--verbose` see
                - For the value to be read from the style sheet, CS must be a local directory
                  and the style sheet (or one of its local imports) must contain a font reference
                  with a ‘[GTF]’ mark.
                    : re `CS` see `^^--co-service-directory`
                    : re `font reference` see https://www.w3.org/TR/css-fonts/#src-desc
                - The bundled style sheet gives a description and example of this mark.
                    : re `bundled style sheet` see image.css
        --quiet
            - Sets the verbosity to level 0.
                : re `verbosity` see `^^--verbosity`
        --verbose
            - Sets the verbosity to level 2.
                : re `verbosity` see `^^--verbosity`
        --verbosity: --verbosity=0|1|2
            - The allowed amount of user feedback on the standard output stream:
              0 none, 1 some, and 2 more.
                : see also `^^--quiet$`
                : see also `^^--verbose$`
            - The default is 1.


    ━━━━━━━━━━
     See also
    ──────────
        • The `waycast-web-image` command.
            : see http://reluk.ca/project/wayic/Web/imager/bin/waycast-web-image.brec
            - For imaging a boundary path that might include a waycast.



                                                    \ Copyright © 2020-2022  Michael Allan.  Licence MIT.
